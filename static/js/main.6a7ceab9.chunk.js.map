{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/cardList/card-list.component.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAe,I,kBCIFA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAW,iBAAhB,UACL,qBACAC,IAAK,SACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEF,6BAAML,EAAMI,QAAQE,OACrB,kCAAKN,EAAMI,QAAQG,MAAnB,WCPMC,G,MAAW,SAACR,GAErB,OAAO,qBAAKC,UAAY,YAAjB,SAEHD,EAAMS,SAASC,KAAI,SAAAD,GACjB,OAAO,cAAC,EAAD,CAA4BL,QAAWK,GAA1BA,EAASH,aCN1BK,G,MAAY,SAAC,GAA+B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aACrC,OAAO,uBAAOC,KAAK,SAClBF,YAAa,iBACbX,UAAW,SACXc,SACIF,MCiDOG,E,kDAnDb,aAAc,IAAD,8BACX,gBA0BFH,aAAe,SAACI,GACd,EAAKC,SACH,CAACC,YAAYF,EAAEG,OAAOC,QACtB,kBAAMC,QAAQC,IAAI,EAAKC,MAAML,iBA5B/B,EAAKK,MAAO,CAEVf,SAAS,CACP,CACEH,KAAK,QAEP,CACEA,KAAK,WAEP,CACEA,KAAK,WAGTa,YAAa,IAfJ,E,qDAkBb,WAAoB,IAAD,OAEjBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJP,QAAQC,IAAIM,GACX,EAAKX,SAAS,CAAET,SAAUoB,S,oBAS/B,WAAS,IAAD,EAC2BC,KAAKN,MAA9Bf,EADF,EACEA,SAASU,EADX,EACWA,YACXY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAChDA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYgB,wBAEhD,OACA,sBAAKlC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACAW,YAAa,kBACbC,aAAgBiB,KAAKjB,eAErB,cAAC,EAAD,CAAUJ,SAAUsB,W,GA9CRK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a7ceab9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n// import {cardList} from '../../App'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return <div className= 'card-container'>\r\n      <img \r\n      alt= \"moster\"\r\n       src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`}\r\n        />\r\n        <h2 >{props.monster.name}</h2>\r\n       <p> {props.monster.email} </p>\r\n         </div>\r\n}\r\n\r\n   ","import React from 'react'\r\nimport {Card, card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    // console.log(props.monsters);\r\n    return <div className = 'card-list'>\r\n       {\r\n        props.monsters.map(monsters=>{\r\n          return <Card key = {monsters.name} monster = {monsters} />\r\n        })\r\n      }\r\n         </div>\r\n}\r\n\r\n   ","import React from 'react'\r\nimport './search-box-style.css'\r\n\r\nexport const SearchBox = ({ placeholder,handleChange })=>{\r\n   return <input type=\"search\"\r\n    placeholder= \"searchmonsters\"\r\n    className= \"search\"\r\n    onChange=  {\r\n        handleChange\r\n    }\r\n     />\r\n}","import React, {Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList, cardList} from './components/cardList/card-list.component'\nimport { SearchBox } from './components/search-box/search-box'\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n     \n      monsters:[\n        {\n          name:'Vlad'\n        },\n        {\n          name:'Dracule'\n        },\n        {\n          name:'Zombie'\n        }\n      ],\n      searchField: ''\n    }\n  }\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users =>{\n      console.log(users)\n       this.setState({ monsters: users })\n      });\n  }\n  handleChange = (e) =>{\n    this.setState(\n      {searchField:e.target.value},\n      () => console.log(this.state.searchField)\n    )\n  }\n  render(){\n    const { monsters,searchField } = this.state\n    const FilteredMonsters = monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n    return (\n    <div className=\"App\">\n      <h1>Monster Rolodex  </h1>\n      <SearchBox \n      placeholder= \"Search Monsters\"\n      handleChange = {this.handleChange}\n       />\n      <CardList monsters={FilteredMonsters} />\n       </div>\n  );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}